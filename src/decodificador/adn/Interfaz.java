/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package decodificador.adn;

import java.awt.Component;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yelbetto
 */
public class Interfaz extends javax.swing.JFrame {

    Detectar nuevo;
    /**
     * Creates new form Interfaz
     */
    Funcionalidad funcionando = new Funcionalidad();

    public Interfaz() {
        initComponents();
        setLocationRelativeTo(null);
        jl_secuencia_mayor.setText("NO HAS LLENADO LOS CAMPOS");
        DocumentListener dl;
        Interfaz usando = this;
        dl = new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateFieldState();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateFieldState();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateFieldState();
            }

            protected void updateFieldState() {
                if (nuevo == null) {
                    nuevo = new Detectar();
                    nuevo.setUsando(usando);
                    Thread lanzar = new Thread(nuevo);
                    lanzar.start();
                } else {
                    if (nuevo.isCorriendo()) {
                        nuevo.setUsando(usando);
                        nuevo.setTiempo(3000);
                    } else {
                        nuevo.setUsando(usando);
                        nuevo.setCorriendo(true);
                        nuevo.setTiempo(3000);
                        Thread lanzar = new Thread(nuevo);
                        lanzar.start();
                    }
                }
            }
        };
        txt_secuencia1.getDocument().addDocumentListener(dl);
        txt_secuencia2.getDocument().addDocumentListener(dl);
        jt_registros.setOpaque(false);
        ((DefaultTableCellRenderer) jt_registros.getDefaultRenderer(Object.class)).setOpaque(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_secuencia1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_secuencia2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jl_secuencia_mayor = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_registros = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Decodificador ADN");
        setBackground(new java.awt.Color(0, 102, 102));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("FreeSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DECODIFICADOR ADN");

        jLabel2.setFont(new java.awt.Font("FreeSerif", 1, 12)); // NOI18N
        jLabel2.setText("SECUENCIA A:");

        txt_secuencia1.setFont(new java.awt.Font("FreeSerif", 0, 12)); // NOI18N
        txt_secuencia1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setFont(new java.awt.Font("FreeSerif", 1, 12)); // NOI18N
        jLabel3.setText("SECUENCIA B:");

        txt_secuencia2.setFont(new java.awt.Font("FreeSerif", 0, 12)); // NOI18N
        txt_secuencia2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setFont(new java.awt.Font("FreeSerif", 1, 14)); // NOI18N
        jLabel4.setText("Actual conjunto ordenado de mayor tamaño:");

        jl_secuencia_mayor.setFont(new java.awt.Font("FreeSerif", 1, 12)); // NOI18N
        jl_secuencia_mayor.setForeground(new java.awt.Color(204, 153, 0));
        jl_secuencia_mayor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_secuencia_mayor.setText("jLabel5");

        jLabel5.setFont(new java.awt.Font("FreeSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("REGISTRO INGRESO DE SECUENCIAS");

        jt_registros.setBackground(new java.awt.Color(51, 51, 51));
        jt_registros.setFont(new java.awt.Font("FreeSerif", 0, 12)); // NOI18N
        jt_registros.setForeground(new java.awt.Color(51, 0, 0));
        jt_registros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Secuencia A", "Secuencia B", "Secuencia Mayor", "Tamaño"
            }
        ));
        jt_registros.setName(""); // NOI18N
        jScrollPane1.setViewportView(jt_registros);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jl_secuencia_mayor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_secuencia2)
                            .addComponent(txt_secuencia1))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_secuencia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_secuencia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jl_secuencia_mayor))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    public void verificar() {
        if (txt_secuencia1.getText().length() > 1 && txt_secuencia2.getText().length() > 1) {
            jl_secuencia_mayor.setText(funcionando.Decodificar_Version2(txt_secuencia1.getText(), txt_secuencia2.getText()));
            ingresar_tabla();
        } else {
            jl_secuencia_mayor.setText("NO HAS LLENADO LOS CAMPOS");
        }
    }

    public JLabel getJl_secuencia_mayor() {
        return jl_secuencia_mayor;
    }

    public void ingresar_tabla() {
        String mayor = jl_secuencia_mayor.getText();
        Object[] fila = new Object[4];
        DefaultTableModel model = (DefaultTableModel) jt_registros.getModel();
        fila[0] = txt_secuencia1.getText();
        fila[1] = txt_secuencia2.getText();
        if (!mayor.equalsIgnoreCase("NO EXISTEN COINCIDENCIAS")) {
            fila[2] = mayor;
            fila[3] = mayor.length();
        } else {
            fila[2] = "----";
            fila[3] = "----";
        }
        model.addRow(fila);
        jt_registros.setModel(model);
        centrar_datos(jt_registros);
    }

    public void centrar_datos(JTable table) {
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < table.getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(tcr);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jl_secuencia_mayor;
    private javax.swing.JTable jt_registros;
    private javax.swing.JTextField txt_secuencia1;
    private javax.swing.JTextField txt_secuencia2;
    // End of variables declaration//GEN-END:variables
}
